function double_inverted(F, a1, a2, a1_t, a2_t, g, l, m_cart, m_pole)
    # %DOUBLE_INVERTED5
    # %    [X_TT,A1_TT,A2_TT] = DOUBLE_INVERTED5(F,A1,A2,A1_T,A2_T,G,L,M_CART,M_POLE)

    # %    This function was generated by the Symbolic Math Toolbox version 9.0.
    # %    17-Oct-2022 12:49:14
    sa1, ca1 = sincos(a1)
    sa2, ca2 = sincos(a2)

    et1 = (F * -1.6e+1) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et2 = (F * ca1^2 * ca2^2 * 9.0) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et3 = (F * sa1^2 * sa2^2 * 9.0) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et4 = (g * m_pole * ca1 * sa1 * 2.7e+1) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et5 = (g * m_pole * ca2 * sa2 * 1.2e+1) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et6 = (a1_t^2 * l * m_pole * sa1 * -2.4e+1) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et7 = (a2_t^2 * l * m_pole * sa2 * -8.0) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et8 = (a1_t^2 * l * m_pole * sa1^3 * sa2^2 * (2.7e+1 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et9 = (a2_t^2 * l * m_pole * sa1^2 * sa2^3 * (9.0 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et10 = (F * ca1 * ca2 * sa1 * sa2 * 1.8e+1) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et11 = (g * m_pole * ca1 * ca2^2 * sa1 * (-2.7e+1 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et12 = (g * m_pole * ca1^2 * ca2 * sa2 * (-2.7e+1 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et13 = (a1_t^2 * l * m_pole * ca2^2 * sa1 * 1.2e+1) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et14 = (a2_t^2 * l * m_pole * ca1^2 * sa2 * 9.0) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et15 = (g * m_pole * ca1 * sa1 * sa2^2 * (-2.7e+1 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et16 = (g * m_pole * ca2 * sa1^2 * sa2 * (-2.7e+1 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et17 = (a1_t^2 * l * m_pole * ca1 * ca2 * sa2 * -1.2e+1) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et18 = (a2_t^2 * l * m_pole * ca1 * ca2 * sa1 * -9.0) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et19 = (a1_t^2 * l * m_pole * ca1^3 * ca2 * sa2 * (2.7e+1 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et20 = (a2_t^2 * l * m_pole * ca1 * ca2^3 * sa1 * (9.0 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et21 = (a1_t^2 * l * m_pole * ca1^2 * sa1 * sa2^2 * (2.7e+1 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et22 = (a2_t^2 * l * m_pole * ca2^2 * sa1^2 * sa2 * (9.0 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et23 = (a1_t^2 * l * m_pole * ca1 * ca2 * sa1^2 * sa2 * (2.7e+1 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et24 = (a2_t^2 * l * m_pole * ca1 * ca2 * sa1 * sa2^2 * (9.0 / 2.0)) / (m_cart * -1.6e+1 - m_pole * 3.2e+1 + m_pole * ca1^2 * 2.7e+1 + m_pole * ca2^2 * 1.2e+1 + m_cart * ca1^2 * ca2^2 * 9.0 - m_pole * ca1^2 * ca2^2 * 9.0 + m_cart * sa1^2 * sa2^2 * 9.0 + m_pole * sa1^2 * sa2^2 * 1.8e+1 + m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    x_tt = et1 + et2 + et3 + et4 + et5 + et6 + et7 + et8 + et9 + et10 + et11 + et12 + et13 + et14 + et15 + et16 + et17 + et18 + et19 + et20 + et21 + et22 + et23 + et24
    et25 = (F * ca1 * 1.8e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et26 = (g * m_cart * sa1 * -1.8e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et27 = (g * m_pole * sa1 * -3.6e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et28 = (F * ca1 * ca2^2 * -9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et29 = (F * ca2 * sa1 * sa2 * -9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et30 = (g * m_pole * ca2^2 * sa1 * (2.7e+1 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et31 = (g * m_cart * sa1 * sa2^2 * 9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et32 = (g * m_pole * sa1 * sa2^2 * 1.8e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et33 = (g * m_cart * ca1 * ca2 * sa2 * 9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et34 = (g * m_pole * ca1 * ca2 * sa2 * (9.0 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et35 = (a2_t^2 * l * m_cart * ca1 * sa2 * -6.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et36 = (a2_t^2 * l * m_cart * ca2 * sa1 * 6.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et37 = (a1_t^2 * l * m_pole * ca1 * sa1 * 2.7e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et38 = (a2_t^2 * l * m_pole * ca1 * sa2 * -3.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et39 = (a2_t^2 * l * m_pole * ca2 * sa1 * 1.2e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et40 = (a2_t^2 * l * m_pole * ca2^3 * sa1 * (-9.0 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et41 = (a1_t^2 * l * m_cart * ca1 * ca2^2 * sa1 * 9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et42 = (a1_t^2 * l * m_cart * ca1^2 * ca2 * sa2 * -9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et43 = (a1_t^2 * l * m_pole * ca1 * ca2^2 * sa1 * -9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et44 = (a1_t^2 * l * m_pole * ca1^2 * ca2 * sa2 * (-9.0 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et45 = (a1_t^2 * l * m_cart * ca1 * sa1 * sa2^2 * -9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et46 = (a1_t^2 * l * m_cart * ca2 * sa1^2 * sa2 * 9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et47 = (a1_t^2 * l * m_pole * ca1 * sa1 * sa2^2 * -1.8e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et48 = (a1_t^2 * l * m_pole * ca2 * sa1^2 * sa2 * (9.0 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et49 = (a2_t^2 * l * m_pole * ca2 * sa1 * sa2^2 * (-9.0 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    a1_tt = et25 + et26 + et27 + et28 + et29 + et30 + et31 + et32 + et33 + et34 + et35 + et36 + et37 + et38 + et39 + et40 + et41 + et42 + et43 + et44 + et45 + et46 + et47 + et48 + et49
    et50 = (F * ca2 * 2.4e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et51 = (g * m_cart * sa2 * -2.4e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et52 = (g * m_pole * sa2 * -4.8e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et53 = (F * ca1^2 * ca2 * -2.7e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et54 = (F * ca1 * sa1 * sa2 * -2.7e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et55 = (g * m_pole * ca1^2 * sa2 * (8.1e+1 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et56 = (g * m_cart * sa1^2 * sa2 * 2.7e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et57 = (g * m_pole * sa1^2 * sa2 * 5.4e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et58 = (g * m_cart * ca1 * ca2 * sa1 * 2.7e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et59 = (g * m_pole * ca1 * ca2 * sa1 * (2.7e+1 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et60 = (a1_t^2 * l * m_cart * ca1 * sa2 * 2.4e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et61 = (a1_t^2 * l * m_cart * ca2 * sa1 * -2.4e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et62 = (a1_t^2 * l * m_pole * ca1 * sa2 * 4.8e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et63 = (a1_t^2 * l * m_pole * ca2 * sa1 * -1.2e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et64 = (a2_t^2 * l * m_pole * ca2 * sa2 * 1.2e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et65 = (a1_t^2 * l * m_pole * ca1^3 * sa2 * (-8.1e+1 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et66 = (a2_t^2 * l * m_cart * ca1 * ca2^2 * sa1 * -9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et67 = (a2_t^2 * l * m_cart * ca1^2 * ca2 * sa2 * 9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et68 = (a2_t^2 * l * m_pole * ca1 * ca2^2 * sa1 * (-9.0 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et69 = (a2_t^2 * l * m_pole * ca1^2 * ca2 * sa2 * -9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et70 = (a2_t^2 * l * m_cart * ca1 * sa1 * sa2^2 * 9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et71 = (a2_t^2 * l * m_cart * ca2 * sa1^2 * sa2 * -9.0) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et72 = (a1_t^2 * l * m_pole * ca1 * sa1^2 * sa2 * (-8.1e+1 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et73 = (a2_t^2 * l * m_pole * ca1 * sa1 * sa2^2 * (9.0 / 2.0)) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    et74 = (a2_t^2 * l * m_pole * ca2 * sa1^2 * sa2 * -1.8e+1) / (l * m_cart * -1.6e+1 - l * m_pole * 3.2e+1 + l * m_pole * ca1^2 * 2.7e+1 + l * m_pole * ca2^2 * 1.2e+1 + l * m_cart * ca1^2 * ca2^2 * 9.0 - l * m_pole * ca1^2 * ca2^2 * 9.0 + l * m_cart * sa1^2 * sa2^2 * 9.0 + l * m_pole * sa1^2 * sa2^2 * 1.8e+1 + l * m_cart * ca1 * ca2 * sa1 * sa2 * 1.8e+1 + l * m_pole * ca1 * ca2 * sa1 * sa2 * 9.0)
    a2_tt = et50 + et51 + et52 + et53 + et54 + et55 + et56 + et57 + et58 + et59 + et60 + et61 + et62 + et63 + et64 + et65 + et66 + et67 + et68 + et69 + et70 + et71 + et72 + et73 + et74
    x_tt, a1_tt, a2_tt
end